name: Build and Release

on:
  release:
    types: [published]

jobs:
  build:
    permissions:
      contents: write

    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Get project dependencies
        run: go mod download

      - name: Build v2ray-stat
        run: |
          mkdir -p build_assets
          COMMID=$(git describe --always --dirty)
          BINARY_NAME="v2ray-stat_${GOOS}_${GOARCH}"
          echo "Building $BINARY_NAME..."
          go build -o build_assets/$BINARY_NAME \
            -trimpath -buildvcs=false \
            -ldflags="-X main.Version=${COMMID} -s -w -buildid=" \
            -v .

      - name: List files in workspace
        run: ls -la ${GITHUB_WORKSPACE}

      - name: Copy additional files
        run: |
          cp "${GITHUB_WORKSPACE}/README.md"  build_assets/README.md
          cp "${GITHUB_WORKSPACE}/LICENSE"    build_assets/LICENSE
          cp "${GITHUB_WORKSPACE}/.env"        build_assets/.env

      - name: List build_assets contents
        run: ls -la build_assets

      - name: Create checksums
        run: |
          cd build_assets
          sha256sum * > checksums.txt

      - name: Upload assets to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build_assets/*
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true
